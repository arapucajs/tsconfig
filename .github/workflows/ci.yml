name: CI

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm
      - name: Install commitlint
        run: npm ci
      - name: Print versions
        run: |
          git --version
          node --version
          npm --version
          npx commitlint --version

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: npx commitlint --last --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose
  tests:
    needs: commitlint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Validate TypeScript configs
        run: |
          npx tsc -p tsconfig.app.json --noEmit
          npx tsc -p tsconfig.package.json --noEmit
          npx tsc -p tsconfig.client.json --noEmit
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Run tests
        run: bun test

  bun-check:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies using Bun
        run: bun install
      - name: Type-check application config with Bun
        run: |
          if git ls-files '*.ts' '*.tsx' | grep -q .; then
            bun run tsc -p tsconfig.app.json --noEmit
          else
            echo "Nenhum arquivo TypeScript encontrado, pulando verificação"
          fi
      - name: Type-check package config with Bun
        run: |
          if git ls-files '*.ts' '*.tsx' | grep -q .; then
            bun run tsc -p tsconfig.package.json --noEmit
          else
            echo "Nenhum arquivo TypeScript encontrado, pulando verificação"
          fi
      - name: Run tests with Bun
        run: bun test
